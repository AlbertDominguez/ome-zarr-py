name: Build

on: [push, pull_request]

jobs:
  test:
    name: Test ${{ matrix.os }} / ${{ matrix.python_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python_version: ['3.6', '3.7', '3.8', '3.9']
        include:
          - python_version: '3.6'
            toxenv: 'py36-PyQt5,py36-PySide2'
          - python_version: '3.7'
            toxenv: 'py37-PyQt5,py37-PySide2'
          - python_version: '3.8'
            toxenv: 'py38-PyQt5,py38-PySide2'
          - python_version: '3.9'
            toxenv: 'py39-PyQt5,py39-PySide2'

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        name: Install Python ${{ matrix.python_version }}
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install ubuntu libraries
        if: startsWith(matrix.os, 'ubuntu')
        run: "\
            sudo apt-get install -y \
            libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 \
            libxcb-image0 libxcb-keysyms1 libxcb-randr0 \
            libxcb-render-util0 libxcb-xinerama0 \
            libxcb-xinput0 libxcb-xfixes0"

      - name: Install & test
        if: |
          ${{ matrix.python_version}} != '3.6' || startsWith(matrix.os, 'win')
        run: |
          python -m pip install -r requirements/requirements-dev.txt
          tox -e ${{ matrix.toxenv }}

# test_coverage:
#   name: Test coverage
#   runs-on: macos-latest
#   steps:
#     - uses: actions/checkout@v1

#     - uses: actions/setup-python@v1
#       name: Install Python '3.7'
#       with:
#         python-version: '3.7'

#     - name: Install dependencies
#       run: |
#         python -m pip install -r requirements/requirements-dev.txt

#     - name: Test
#       run: tox -e  'py37-PyQt5-coverage'

#     - uses: codecov/codecov-action@v1
#       with:
#         file: ./coverage.xml
#         fail_ci_if_error: true
